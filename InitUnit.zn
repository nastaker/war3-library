library InitUnit requires TimerUtils {

  constant real X = 7872.00;
  constant real Y = -3776.00;
  constant real homeX = -8192.00;
  constant real homeY = -4096.00;
  constant real horGap = 384.00;
  constant real verGap = 256.00;
  constant integer shopId = 'u3UA';
  constant integer abi_muteki = 'Avul';
  constant integer shopCount = 12;
  constant integer heroCount = 24;
  constant integer heroHorCount = 4;
  constant integer heroVerCount = 6;

  constant integer MAX_PLAYER_COUNT = 10;
  boolean heroSelected[MAX_PLAYER_COUNT];
  boolean selectConfirm[MAX_PLAYER_COUNT];
  timer t[MAX_PLAYER_COUNT];

  function timerElapsed() {
    integer playerId = GetTimerData(GetExpiredTimer());
    selectConfirm[playerId] = false;
    ReleaseTimer(t[playerId]);
  }

  function heroSelect() -> boolean {
    integer playerId = GetPlayerId(GetTriggerPlayer());
    if (heroSelected[playerId]) {
      return false;
    }
    if (GetOwningPlayer(GetTriggerUnit()) != Player(PLAYER_NEUTRAL_PASSIVE)) {
      return false;
    }
    if (selectConfirm[playerId]) {
      heroSelected[playerId] = true;
      CreateUnit( GetTriggerPlayer(), GetUnitTypeId(GetTriggerUnit()), homeX, homeY, bj_UNIT_FACING );
      if (GetTriggerPlayer() == GetLocalPlayer()) {
        PanCameraToTimed(homeX, homeY, 0.50);
      }
    } else {
      selectConfirm[playerId] = true;
      if (t[playerId] == null) {
        t[playerId] = NewTimer();
      }
      SetTimerData(t[playerId], playerId);
      TimerStart( t[playerId], 0.20, true, function timerElapsed);
    }
    return true;
  }

  function nCreateUnit() {
    // 创建商店
    integer i = 0, j = 0, count = 0;
    real distX = 0;
    real distY = 0;
    integer hero[];
    unit u = null;

    hero[0] = 'Hamg';
    hero[1] = 'Hmkg';
    hero[2] = 'Hpal';
    hero[3] = 'Hblm';
    hero[4] = 'Oshd';
    hero[5] = 'Obla';
    hero[6] = 'Otch';
    hero[7] = 'Ofar';
    hero[8] = 'Ucrl';
    hero[9] = 'Udre';
    hero[10] = 'Udea';
    hero[11] = 'Ulic';
    hero[12] = 'Ekee';
    hero[13] = 'Edem';
    hero[14] = 'Ewar';
    hero[15] = 'Emoo';
    hero[16] = 'Nbrn';
    hero[17] = 'Nfir';
    hero[18] = 'Nalc';
    hero[19] = 'Nngs';
    hero[20] = 'Nplh';
    hero[21] = 'Npbm';
    hero[22] = 'Ntin';
    hero[23] = 'Nbst';

  
    for ( 0 <= i < heroVerCount ) {
      for( 0 <= j < heroHorCount ) {
        distX = X + j * horGap;
        distY = Y - i * verGap;
        u = CreateUnit(Player(PLAYER_NEUTRAL_PASSIVE), hero[i*heroHorCount + j], distX, distY, bj_UNIT_FACING);
        SetHeroLevel(u, 100, false);
        UnitAddAbility(u, abi_muteki);
        UnitMakeAbilityPermanent(u, true, abi_muteki);
        count = count + 1;
        if (count >= heroCount) {
          break;
        }
      }
    }
    u = null;
  }

  function onInit(){
    trigger trg = CreateTrigger();
    integer i = 0;
    for (0 <= i < MAX_PLAYER_COUNT) {
      TriggerRegisterPlayerUnitEvent(trg, Player(i), EVENT_PLAYER_UNIT_SELECTED, null);
    }
    TriggerAddCondition(trg, function heroSelect);
    nCreateUnit();
    trg = null;
  }
}