library SystemBinary {
  public {
    constant integer COUNT = 19;
    constant integer powersOf2[COUNT];

    function havebinary(integer number, integer index) -> boolean {
      integer i;
      boolean have = false;
      if (index < 0) {
        return have;
      }
      for (COUNT-1 >= i >= 0) {
        if (number >= powersOf2[i]) {
          number = number - powersOf2[i];
          if (index == i) {
            have = true;
            break;
          }
        }
      }
      return have;
    }

    function Min(integer a, integer b) -> integer {
      if (a < b) {
        return a;
      } else {
        return b;
      }
    }

    function Max(integer a, integer b) -> integer {
      if (a > b) {
        return a;
      } else {
        return b;
      }
    }
  }
  
  function onInit(){
    powersOf2[0] = 1;
    powersOf2[1] = 2;
    powersOf2[2] = 4;
    powersOf2[3] = 8;
    powersOf2[4] = 16;
    powersOf2[5] = 32;
    powersOf2[6] = 64;
    powersOf2[7] = 128;
    powersOf2[8] = 256;
    powersOf2[9] = 512;
    powersOf2[10] = 1024;
    powersOf2[11] = 2048;
    powersOf2[12] = 4096;
    powersOf2[13] = 8192;
    powersOf2[14] = 16384;
    powersOf2[15] = 32768;
    powersOf2[16] = 65536;
    powersOf2[17] = 131072;
    powersOf2[18] = 262144;
  }
}